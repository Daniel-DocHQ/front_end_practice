/// <reference types="Cypress" />

//MAKING A CUSTOMIZED ORDER OF ANY PRODUCT
//PLEASE USE customize_test.json FOR TEST SETUP

import {test_data} from '../../fixtures/customize_test.js'
import OrderPage from '../../page_objects/OrderPage.js'

const Order = new OrderPage(test_data)


describe("B2C - Purchasing products", () => {

  	it('Order page for the product is loaded successfully', () => {
  		let link = Order.get_checkout_page_link()
	
  		cy.intercept({method: 'GET', url: link,}).as('order_page')
  		cy.visit(link); cy.wait(2000); cy.reload()
  		cy.wait('@order_page')

  		// Assert products checkout page
  		cy.get('@order_page').should( req => { expect(req.response.statusCode).eq(200) })
  		cy.wait(2000)

    	// Assert products total price value
  		let total_price = Order.get_total_products_price()
  		cy.get('[style="align-items: flex-end;"] > div > h3').contains('Total Price').should('include.text', total_price)

  		// Aknowledge that order needs 5 days to be delivered
  		cy.get('input[type="checkbox"]').check({force: true})
  	})

  
  	it('Number of kits match number of pessengers. Fields are functionall.', () => {
    	// Select total Number of Kits
    	Order.set_total_number_of_pessengers(1)

    	cy.get('.green').contains('Next').click()
		cy.wait(1500)
	})


  	it('Pessenger details can be submitted', () => {
		// Random data is generated by default, 
		// to customise - enter arguments respectively: email, first_name, last_name, date_of_birth
    	Order.fill_account_details(test_data[1].email)

    	cy.get('input[type="checkbox"]').check({force: true})
    	cy.get('.green').contains('Next').click()
    	cy.wait(1500)
  	})


  	it('Shipping address and phone number details can be submitted', () => {
		// Random data is generated by default, 
		// to customise - enter arguments respectively: country_code, phone, postcode, address, city, country
    	Order.fill_shipping_address(test_data[1].country_code, test_data[1].phone) // only random UK number is supported

    	cy.get('.green').contains('Next').click()
    	cy.wait(1500)
  	})


	it('Enter discount code', () => {
		// Discount code
    	// let discount = "1RAR38F"
    	// cy.get('input[name="discountCode"]').fill(discount)
	})
  

  	it('Payment details can be submitted', () => {

		cy.intercept({method: 'POST', url: 'https://api-staging.dochq.co.uk/v1/order'}).as('submit_order')
		// Default fake card data
		Order.fill_payment_data()
	
    	cy.get('.green').contains('Pay Now').click()
		cy.wait('@submit_order')
    	cy.get('@submit_order').then( xhr => { expect(xhr.response.statusCode).eq(200) })
    	cy.wait(2000)
  	})


	it('Purchasing confirmation and order data save', () => {
		cy.get('div.row.no-margin > b').should('have.text',"Thank you for completing your purchase!")
		
		Order.write_order_data() //cypress/fixtures/order_list.json
		Order.write_user_data()  //cypress/fixtures/user.json
	})
})